1. You are given a number n, representing the size of array a.
2. You are given n numbers, representing the elements of array a.
3. You are given a number k, representing the size of window.
4. You are required to find and print the maximum element in every window of size k.

e.g.
for the array [2 9 3 8 1 7 12 6 14 4 32 0 7 19 8 12 6] and k = 4, the answer is [9 9 8 12 12 14 14 32 32 32 32 19 19 19]

#include <iostream>
#include <vector>
#include <stack>
using namespace std;

vector<int> nextGreaterElementRight(vector<int> arr){
    vector<int> v(arr.size(),0);
    stack<int> st;

    st.push(arr.size()-1);
    v[arr.size()-1] = arr.size();

    for(int i=arr.size()-2;i>=0;i--){
        while(!st.empty() && arr[i] >= arr[st.top()]){
            st.pop();
        }

        if(st.empty()){
            v[i]=arr.size();
        }else{
            v[i]=st.top();
        }

        st.push(i);
    }
    return v;
}

int main() {
    int n;
    cin>>n;
    vector<int> arr(n,0);
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int k;
    cin>>k;
    
    vector<int> nge(n,0);
    nge = nextGreaterElementRight(arr);

    int j=0;
    for(int i=0;i <= arr.size() - k;i++){ //last window starts at (arr.size()-k)
        //enter the loop to find the maximum of window starting at i
        if(i>j){
            j=i;
        }
        while(nge[j] < i+k){
            j=nge[j];
        }
        cout<<arr[j]<<" ";
    }
    return 0;
}
